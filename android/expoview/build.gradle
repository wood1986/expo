apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven'
apply plugin: 'com.jakewharton.butterknife'

// WHEN_VERSIONING_REMOVE_FROM_HERE
//maven repository info
group = 'host.exp.exponent'
version = '37.0.0'


//Upload android library to maven with javadoc and android sources
configurations {
  deployerJars
}

//Creating sources with comments
task androidSourcesJar(type: Jar) {
  classifier = 'sources'
  from android.sourceSets.main.java.srcDirs
}

//Put the androidSources and javadoc to the artifacts
artifacts {
  archives androidSourcesJar
}

uploadArchives {
  repositories {
    mavenDeployer {
      configuration = configurations.deployerJars
      repository(url: mavenLocal().url) {
        //if your repository needs authentication
        // authentication(userName: "username", password: "password")
      }
    }
  }
}
// WHEN_VERSIONING_REMOVE_TO_HERE

def safeExtGet(prop, fallback) {
  rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

buildscript {
  repositories {
    maven { url 'https://maven.fabric.io/public' }
    // If you have maven { url "https://jitpack.io" } as your resolving url,
    // then Jitpack will only return the POM for the Android dependency causing the Gradle sync to fail.
    // However, when you change url to "https://www.jitpack.io", Jitpack returns POM, AAR, and sources.jar.
    // That is why we were adding www even though jitpacks docs don't say so.
    // See https://github.com/jitpack/jitpack.io/issues/4002.
    maven { url "https://www.jitpack.io" }
    mavenCentral()
    google()
    jcenter()
  }
  dependencies {
    classpath 'com.jakewharton:butterknife-gradle-plugin:10.2.0'
  }
}

repositories {
  maven { url 'https://maven.fabric.io/public' }
  maven { url "https://www.jitpack.io" }
  mavenCentral()
}

android {
  compileSdkVersion safeExtGet("compileSdkVersion", 28)

  compileOptions {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
  }

  defaultConfig {
    minSdkVersion safeExtGet("minSdkVersion", 21)
    targetSdkVersion safeExtGet("targetSdkVersion", 28)
    versionCode 1
    versionName "1.0"
    // WHEN_VERSIONING_REMOVE_FROM_HERE
    manifestPlaceholders = [
        'appAuthRedirectScheme': 'host.exp.exponent'
    ]
    // WHEN_VERSIONING_REMOVE_TO_HERE
  }

  buildTypes {
    debug {
      ext.enableCrashlytics = false
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  compileOptions {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
  }
}

// WHEN_VERSIONING_REMOVE_FROM_HERE
import org.apache.tools.ant.taskdefs.condition.Os

class GenerateDynamicMacrosPlugin implements Plugin<Project> {
  @Override
  void apply(Project target) {
    target.exec {
      def configuration = target.gradle.startParameter.taskNames.any {
        it.toLowerCase().contains("release")
      } ? "release" : "debug"

      workingDir '../../tools/expotools/bin'

      if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine 'cmd.exe', '/c', "expotools.js android-generate-dynamic-macros --configuration ${configuration}"
      } else {
        commandLine "./expotools.js", "android-generate-dynamic-macros", "--configuration", configuration
      }
    }
  }
}

apply plugin: GenerateDynamicMacrosPlugin

configurations.all {
  resolutionStrategy {
    force 'org.webkit:android-jsc:r245459'
  }
}

// Import gradle helpers for unimodules.
apply from: "../../node_modules/react-native-unimodules/gradle.groovy"
// WHEN_VERSIONING_REMOVE_TO_HERE

dependencies {
  api fileTree(dir: 'libs', include: ['*.jar'])
  api 'androidx.multidex:multidex:2.0.0'
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

  testImplementation 'junit:junit:4.12'

  // WHEN_VERSIONING_REPLACE_WITH_DEPENDENCIES

  // WHEN_VERSIONING_REMOVE_FROM_HERE

  api 'org.webkit:android-jsc:r245459' // needs to be before react-native

  /* UNCOMMENT WHEN DISTRIBUTING
  api 'com.facebook.react:react-native:37.0.0'
  addUnimodulesDependencies([
      modulesPaths : ['../../packages'],
      configuration: 'compileOnly',
      target       : 'react-native',
      exclude      : [
        'expo-module-template',
        'expo-bluetooth',
        'expo-in-app-purchases',
        'expo-updates',
        'expo-notifications'
        'expo-splash-screen'
      ]
  ])
  END UNCOMMENT WHEN DISTRIBUTING */

  // WHEN_DISTRIBUTING_REMOVE_FROM_HERE
  api project(':ReactAndroid')

  // Universal modules
  // In distribution they're "compileOnly" and it's the app/build.gradle who manages them.
  addUnimodulesDependencies([
      modulesPaths : ['../../packages'],
      configuration: 'api',
      target       : 'react-native',
      exclude      : [
          'expo-module-template',
          'expo-bluetooth',
          'expo-notifications',
          'expo-in-app-purchases',
          'expo-splash-screen'
      ]
  ])

  // Versioned react native
  // WHEN_PREPARING_SHELL_REMOVE_FROM_HERE
  // THIS COMMENT IS USED BY android-build-aar.sh DO NOT MODIFY
  // BEGIN_SDK_37
  api 'host.exp:reactandroid-abi37_0_0:1.0.0'
  // END_SDK_37
  // BEGIN_SDK_36
  api 'host.exp:reactandroid-abi36_0_0:1.0.0'
  // END_SDK_36
  // BEGIN_SDK_35
  api 'host.exp:reactandroid-abi35_0_0:1.0.0'
  // END_SDK_35
  // BEGIN_SDK_34
  api 'host.exp:reactandroid-abi34_0_0:1.0.0'
  // END_SDK_34
  // WHEN_PREPARING_SHELL_REMOVE_TO_HERE
  // WHEN_VERSIONING_REMOVE_TO_HERE
  // WHEN_DISTRIBUTING_REMOVE_TO_HERE

  // React native dependencies
  api 'com.facebook.fresco:fresco:2.0.0'
  api 'com.facebook.fresco:animated-gif:2.0.0'
  api 'com.facebook.fresco:animated-webp:2.0.0'
  api 'com.facebook.fresco:webpsupport:2.0.0'
  api 'com.facebook.fresco:imagepipeline-okhttp3:2.0.0'
  api 'com.facebook.stetho:stetho:1.3.1' // do we need this?
  api 'com.facebook.stetho:stetho-okhttp3:1.3.1' // do we need this?
  compileOnly 'com.facebook.soloader:soloader:0.6.0'
  api 'com.google.code.findbugs:jsr305:3.0.2'
  api 'com.squareup.okhttp3:okhttp:3.12.1'
  api 'com.squareup.okhttp3:okhttp-urlconnection:3.12.1'
  api 'com.squareup.okio:okio:1.15.0'
  api 'com.facebook.infer.annotation:infer-annotation:0.11.2'
  api 'javax.inject:javax.inject:1'

  // Our dependencies
  api "androidx.appcompat:appcompat:1.1.0"
  api('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
    transitive = true;
  }
  compileOnly 'org.glassfish:javax.annotation:3.1.1'
  api 'de.greenrobot:eventbus:2.4.0'

  api 'com.squareup.picasso:picasso:2.5.2'
  api 'com.google.android.gms:play-services-gcm:17.0.0'
  api 'com.google.android.gms:play-services-analytics:17.0.0'
  api 'com.google.android.gms:play-services-maps:17.0.0'
  api 'com.google.android.gms:play-services-auth:17.0.0'
  api 'com.google.android.gms:play-services-location:17.0.0'
  api 'com.google.android.gms:play-services-fitness:17.0.0'
  api 'com.google.android.gms:play-services-wallet:17.0.0' //may need 10.+
  debugApi 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta1'
  // debugApi 'com.squareup.leakcanary:leakcanary-android:1.4-beta1'
  releaseApi 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta1'
  api 'commons-io:commons-io:2.6'
  api 'me.leolin:ShortcutBadger:1.1.4@aar'
  api 'com.theartofdev.edmodo:android-image-cropper:2.7.0'
  api 'commons-codec:commons-codec:1.10'
  api 'net.openid:appauth:0.7.1'
  api 'com.airbnb.android:lottie:2.5.6'
  compileOnly 'io.branch.sdk.android:library:4.1.0'
  api "androidx.exifinterface:exifinterface:1.0.0"
  api "androidx.legacy:legacy-support-v4:1.0.0"
  api "androidx.browser:browser:1.0.0"
  
  // react-native-screens
  api 'androidx.fragment:fragment:1.2.2'
  api 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
  api 'com.google.android.material:material:1.1.0'

  api 'com.google.firebase:firebase-core:17.2.3'
  api 'com.google.firebase:firebase-messaging:20.1.2'
  api 'com.google.maps.android:android-maps-utils:0.5'
  api 'com.jakewharton:butterknife:10.2.0'
  annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.0'
  // Remember to update DetachAppTemplate build.gradle if you add any excludes or transitive = false here!

  // Used only in Expo client, see Analytics.java
  compileOnly 'com.amplitude:android-sdk:2.23.2'

  // expo-file-system
  api 'com.squareup.okhttp3:okhttp:3.10.0'
  api 'com.squareup.okhttp3:okhttp-urlconnection:3.10.0'

  // expo-av
  // See explanation in expo-av/build.gradle
  api 'com.google.android.exoplayer:extension-okhttp:2.9.2'

  // expo-application
  api 'com.android.installreferrer:installreferrer:1.0'

  //dbflow
  annotationProcessor "com.github.Raizlabs.DBFlow:dbflow-processor:${safeExtGet('dbFlowVersion', '4.2.4')}"
  api "com.github.Raizlabs.DBFlow:dbflow-core:${safeExtGet('dbFlowVersion', '4.2.4')}"
  api "com.github.Raizlabs.DBFlow:dbflow:${safeExtGet('dbFlowVersion', '4.2.4')}"

  implementation 'com.cronutils:cron-utils:4.1.3'
}
